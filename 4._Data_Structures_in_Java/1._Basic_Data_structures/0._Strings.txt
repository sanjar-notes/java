Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-11-24T00:41:52+05:30

====== 0. Strings ======
Created Tuesday 24 November 2020

Strings are generally stored in a string pool.

=== Basic Functions ===
* .''length''()
* .''charAt''(int) : char
* .''substring''(startIndex[, endIndex]) - default length is till the end. //"from - including, to - excluding"//
* .''indexOf''(keyString[, startIndex]) - first occurence of returns -1 for unsuccessful search.
* .''matches''(regexString) - returns true if regex matches.

=== Comparing Strings ===
Conditions
	* Syntax searchSpaceString.f(keyString)
	* Return bool or int.
* ''equals''()
* ''equalsIgnoreCase''()
* ''startsWith''()
* ''endsWith''()
* ''compareTo''() - Minimal difference. Returns 0 for equality, positive if caller comes before argument.

=== Mainpulating Strings ===
Java Strings are immutable. They cannot be addressed like an array.
Conditions
* All return a //**new String**.//
* Syntax: originalString.f()
* ''trim''(~~noArg~~) - returns a string with whitespace trimmed on both ends.
* ''split''(delimiterString[, limit]) - returns an array of strings when divided by delimiter. //limit //is an optional argument that returns an array of length //limit//-1.
* ''replaceFirst''(key, replacement) - returns a new string. Obvious. Returns copy if key is absent. 
* ''replaceAll''(key, replacement) - similar to ''replaceFirst''

=== String conversions - to and from ===
* obj.''toString''(~~noArgs~~) - returns a sane ''String'' representation of a proper object(doesn't work for primitives). Most built-ins support it. For custom classes, ''toString'' needs to be overriden. It belongs to the ''Object'' class.
* ''Integer''.''parseInt''(stringVal) - variations like ''Float.parseFloat''(), ''Double.parseDouble''() etc exist.

=== Good to know ===
* Java supports text blocks - just like python 3 double quotes. Quotes can still be used freely.
{{{code: lang="java" linenumbers="True"
String textblock = """
                   This is a text inside a
                   text block.
                   You can use "quotes" in here
                   without escaping them.
                   """;
}}}

