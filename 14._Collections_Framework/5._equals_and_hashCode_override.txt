Content-Type: text/x-zim-wiki
Wiki-Format: zim 0.6
Creation-Date: 2020-08-10T19:52:49+05:30

====== 5. equals and hashCode override ======
Created Monday 10 August 2020

* The default == checks equality of reference, equals() checks bit by bit value.
* There is a strict relationship between hashCode and equal, i.e if two objects have the same value, they should have the same hashCode.
* Signatures - Important
	
{{{code: lang="java" linenumbers="True"
public boolean equals(Object obj); // between this and obj
public int hashCode(); // for this
}}}
	

* Use the Override annotation
* Examples of equals and hashCode

{{{code: lang="java" linenumbers="True"
@Override
public boolean equals(Object obj)
{
	return this.name.equals(obj.getName()); // String.equals is called here, which is implemented by default
}
}}}


--------------------
* All the primitive types have **equals** and **hashCode** already implemented properly, use them.
* To make equals invincible for subclassing, make the Override equals() **final**.
* equals has to be a equivalent relation - reflexive, symmetric and transitive
